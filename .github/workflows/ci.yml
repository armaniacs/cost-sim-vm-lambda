name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        mise use python@${{ matrix.python-version }}
        mise install

    - name: Cache mise tools
      uses: actions/cache@v3
      with:
        path: ~/.local/share/mise
        key: ${{ runner.os }}-mise-${{ hashFiles('.mise.toml') }}
        restore-keys: |
          ${{ runner.os }}-mise-

    - name: Install dependencies
      run: mise run install

    - name: Run linting
      run: mise run lint

    - name: Run tests with coverage
      run: mise run test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install mise
      uses: jdx/mise-action@v2

    - name: Set up environment
      run: mise install

    - name: Install security tools
      run: pip install bandit safety

    - name: Run security checks
      run: |
        bandit -r app/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2

    - name: Set up environment
      run: |
        mise install
        mise run install

    - name: Build application
      run: |
        # Add build steps here when ready for deployment
        echo "Build step - placeholder for future deployment"

    - name: Test application startup
      run: |
        timeout 10s mise run dev || echo "App startup test completed"